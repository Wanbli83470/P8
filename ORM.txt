

Insertion :

>>> from P8.models import SUBSTITUT, CATEGORIES, PRODUIT
>>> from P8.models import Profil
>>> test = Profil.objects.get(genre="Homme")
>>> test2 = test.user
>>> sub1 = SUBSTITUT(NOM="produit1", STORE="Intermarché", SUBSTITUT_URL = "www.produit-1.fr", DESCRIPTION = "Le produit 1", USER_FAVORITE=test2)
>>> sub1.save()

>>>
Un produit seul :
from P8.models import SUBSTITUT, CATEGORIES, PRODUIT
key_cat = CATEGORIES.objects.last()
products = PRODUIT(NOM="test-produit", PRODUIT_URL="www.test.fr", STORE="Le store", NUTRISCORE=5, CATEGORIE_ID=key_cat)
products.save()

avec une liste :
count = 20
i = 0

while i < 20 :
    products = PRODUIT(NOM=name, PRODUIT_URL=url, STORE="Le store", NUTRISCORE=ns, CATEGORIE_ID=key_cat)

Afficher les produits dans results.html :
from django.db.models import Q
from P8.models import SUBSTITUT, CATEGORIES, PRODUIT
cat_key = cat_key = CATEGORIES.objects.last()

Requête pour récupérer les produits d'un nutriscore inférieur à 4

product = PRODUIT.objects.filter(Q(CATEGORIE_ID=cat_key) & Q(NUTRISCORE__lt=4))

Tester la présence d'une catégorie :
from P8.models import CATEGORIES
cat = CATEGORIES.objects.get_or_create(NOM="sweet-snacks", LINK_OFF="www")
test_cat = False

if True in cat :
    print("Catégorie Crée")
    test_cat = True
    print(test_cat)
else :
    print("Catégorie Existante")
    test_cat = False
    print(test_cat)


Récupérer la catégorie crée ou récupérer pour la clef etrangère : OK
test_cat2 = CATEGORIES.objects.get(NOM="sweet-snacks")

Insertion du produit : OK
products = PRODUIT(NOM="test-produit", PRODUIT_URL="www.test.fr", STORE="Le store", NUTRISCORE=5, CATEGORIE_ID=test_cat2)

Sauvegarder un produit en substitut :
save_product = SUBSTITUT(PRODUIT_ID=450, USER_FAVORITE=request.user)

tester si substitut existant :
from P8.models import SUBSTITUT, CATEGORIES, PRODUIT
test_sub = SUBSTITUT.objects.get_or_create(PRODUIT_ID="sweet-snacks", USER_FAVORITE="www")